{
  "NextJS Page Component": {
    "prefix": "npage",
    "body": [
      "'use client'",
      "",
      "import React from 'react'",
      "",
      "interface ${1:PageName}Props {",
      "  // props aquí",
      "}",
      "",
      "const ${1:PageName} = ({ ...props }: ${1:PageName}Props) => {",
      "  return (",
      "    <main className=\"min-h-screen bg-gray-50\">",
      "      <div className=\"container mx-auto px-4 py-8\">",
      "        ${2:/* contenido aquí */}",
      "      </div>",
      "    </main>",
      "  )",
      "}",
      "",
      "export default ${1:PageName}"
    ],
    "description": "Crea un componente de página Next.js con TypeScript"
  },
  
  "NextJS API Route": {
    "prefix": "napi",
    "body": [
      "import { NextApiRequest, NextApiResponse } from 'next'",
      "",
      "export default async function handler(",
      "  req: NextApiRequest,",
      "  res: NextApiResponse",
      ") {",
      "  try {",
      "    if (req.method === 'GET') {",
      "      // Lógica para GET",
      "      res.status(200).json({ success: true, data: {} })",
      "    } else if (req.method === 'POST') {",
      "      // Lógica para POST",
      "      res.status(201).json({ success: true, data: {} })",
      "    } else {",
      "      res.setHeader('Allow', ['GET', 'POST'])",
      "      res.status(405).end(`Method ${req.method} Not Allowed`)",
      "    }",
      "  } catch (error) {",
      "    console.error('API Error:', error)",
      "    res.status(500).json({ success: false, error: 'Internal Server Error' })",
      "  }",
      "}"
    ],
    "description": "Crea una ruta API de Next.js con TypeScript"
  },
  
  "NextJS Layout Component": {
    "prefix": "nlayout",
    "body": [
      "import React from 'react'",
      "import type { Metadata } from 'next'",
      "",
      "export const metadata: Metadata = {",
      "  title: '${1:Page Title}',",
      "  description: '${2:Page description}',",
      "}",
      "",
      "interface LayoutProps {",
      "  children: React.ReactNode",
      "}",
      "",
      "const ${3:LayoutName} = ({ children }: LayoutProps) => {",
      "  return (",
      "    <html lang=\"es\">",
      "      <body className=\"font-sans antialiased\">",
      "        <header className=\"bg-white shadow-sm\">",
      "          ${4:/* header content */}",
      "        </header>",
      "        <main>{children}</main>",
      "        <footer className=\"bg-gray-100 mt-auto\">",
      "          ${5:/* footer content */}",
      "        </footer>",
      "      </body>",
      "    </html>",
      "  )",
      "}",
      "",
      "export default ${3:LayoutName}"
    ],
    "description": "Crea un componente Layout para Next.js 13+"
  },
  
  "Tailwind Container": {
    "prefix": "twcontainer",
    "body": [
      "<div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-8\">",
      "  ${1:/* contenido */}",
      "</div>"
    ],
    "description": "Contenedor responsive con Tailwind"
  },
  
  "Tailwind Grid": {
    "prefix": "twgrid",
    "body": [
      "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-${1:3} gap-6\">",
      "  ${2:/* grid items */}",
      "</div>"
    ],
    "description": "Grid responsive con Tailwind"
  }
}